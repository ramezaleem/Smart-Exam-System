@using ExamSystem.ViewModels
@model ExamScoresViewModel

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<h2>درجات الطلاب للامتحان: @Model.ExamTitle</h2>

<div class="mb-3">
    <strong>عدد الطلاب المسجلين:</strong> @Model.TotalStudents <br />
    <strong>الطلاب الذين امتحنوا:</strong> @Model.StudentsTaken <br />
    <strong>نسبة الطلاب الذين امتحنوا:</strong> @Model.PercentageTaken%
</div>

<table class="table table-striped table-bordered">
    <thead class="table-primary">
        <tr>
            <th>اسم الطالب</th>
            <th>الدرجة</th>
            <th>النسبة المئوية</th>
            <th>الحالة</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var student in Model.StudentScores)
        {
            <tr class="@(student.Score.HasValue ? "" : "table-warning")">
                <td>@student.StudentName</td>
                <td>@(student.Score.HasValue? student.Score.Value.ToString("F2") : "-")</td>
                <td>@(student.Score.HasValue ? $"{student.Score.Value:F2}%" : "-")</td>
                <td>@(student.Score.HasValue ? "امتحن" : "لم يمتحن بعد")</td>
            </tr>
        }
    </tbody>
</table>

<a asp-action="Index" class="btn btn-secondary mt-3">رجوع لصفحة الامتحانات</a>
