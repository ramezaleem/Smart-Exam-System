@model ExamSystem.Models.Exam

@{
    ViewData["Title"] = "تعديل الامتحان";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<h2>@ViewData["Title"]</h2>

<form asp-action="Edit" method="post" class="mt-3" id="examEditForm">
    <input type="hidden" asp-for="Id" />

    <div class="form-group mb-3">
        <label asp-for="Title"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="StartTime"></label>
        <input asp-for="StartTime" class="form-control" type="datetime-local" id="editStartTime" />
        <span asp-validation-for="StartTime" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="EndTime"></label>
        <input asp-for="EndTime" class="form-control" type="datetime-local" id="editEndTime" />
        <span asp-validation-for="EndTime" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Description"></label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="alert alert-danger d-none" role="alert" id="editTimeErrorMsg" style="font-weight: 600; font-size: 1.1rem;">
        وقت الانتهاء يجب أن يكون أكبر من أو يساوي وقت البداية!
    </div>

    <button type="submit" class="btn btn-success">حفظ التعديلات</button>
    <a asp-action="Index" class="btn btn-secondary">رجوع</a>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.getElementById('examEditForm').addEventListener('submit', function (event) {
            const startTimeInput = document.getElementById('editStartTime').value;
            const endTimeInput = document.getElementById('editEndTime').value;

            if (startTimeInput && endTimeInput) {
                const start = new Date(startTimeInput);
                const end = new Date(endTimeInput);

                if (end < start) {
                    event.preventDefault();

                    const errorMsg = document.getElementById('editTimeErrorMsg');
                    errorMsg.classList.remove('d-none');

                    setTimeout(() => {
                        errorMsg.classList.add('d-none');
                    }, 5000);

                    return false;
                }
            }
        });
    </script>
}
